# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.
version: "3.8"

services:
  db-admin-tenant1:
    image: ${ADMIN_DB_IMAGE:-edfialliance/ods-api-db-admin:${TAG}}
    profiles: ["default"]
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      ODS_PGBOUNCER_PORT: ${PGBOUNCER_LISTEN_PORT:-6432}
      ODS_POSTGRES_HOST: pb-ods-tenant1
      NPG_POOLING_ENABLED: ${NPG_POOLING_ENABLED:-false}
      NPG_API_MAX_POOL_SIZE_ODS: ${NPG_API_MAX_POOL_SIZE_ODS}
      TENANT_IDENTIFIER: tenant1
    volumes:
      - vol-db-admin-tenant1:/var/lib/postgresql/data
      - ./edfi/bootstrap.sh:/docker-entrypoint-initdb.d/2-bootstrap.sh
    restart: always
    container_name: ed-fi-db-admin-tenant1
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready  -U ${POSTGRES_USER}
      start_period: 60s
      retries: 3

  db-admin-tenant2:
    image: ${ADMIN_DB_IMAGE:-edfialliance/ods-api-db-admin:${TAG}}
    profiles: ["default"]
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      ODS_PGBOUNCER_PORT: ${PGBOUNCER_LISTEN_PORT:-6432}
      ODS_POSTGRES_HOST: pb-ods-tenant2
      NPG_POOLING_ENABLED: ${NPG_POOLING_ENABLED:-false}
      NPG_API_MAX_POOL_SIZE_ODS: ${NPG_API_MAX_POOL_SIZE_ODS}
      TENANT_IDENTIFIER: tenant2
    volumes:
      - vol-db-admin-tenant2:/var/lib/postgresql/data
      - ./edfi/bootstrap.sh:/docker-entrypoint-initdb.d/2-bootstrap.sh
    restart: always
    container_name: ed-fi-db-admin-tenant2
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready  -U ${POSTGRES_USER}
      start_period: 60s
      retries: 3

  pb-admin-tenant1:
    image: bitnami/pgbouncer:1.20.0
    profiles: ["default"]
    environment:
      PGBOUNCER_DATABASE: '*'
      PGBOUNCER_PORT: ${PGBOUNCER_LISTEN_PORT:-6432}
      PGBOUNCER_EXTRA_FLAGS: ${PGBOUNCER_EXTRA_FLAGS}
      POSTGRESQL_USER: ${POSTGRES_USER}
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRESQL_HOST: db-admin-tenant1
      PGBOUNCER_SET_DATABASE_USER: 'yes'
      PGBOUNCER_SET_DATABASE_PASSWORD: 'yes'
      PGBOUNCER_IGNORE_STARTUP_PARAMETERS: extra_float_digits
    ports:
      - "5401:${PGBOUNCER_LISTEN_PORT:-6432}"
    restart: always
    container_name: ed-fi-pb-admin-tenant1
    depends_on:
      - db-admin-tenant1

  pb-admin-tenant2:
    image: bitnami/pgbouncer:1.20.0
    profiles: ["default"]
    environment:
      PGBOUNCER_DATABASE: '*'
      PGBOUNCER_PORT: ${PGBOUNCER_LISTEN_PORT:-6432}
      PGBOUNCER_EXTRA_FLAGS: ${PGBOUNCER_EXTRA_FLAGS}
      POSTGRESQL_USER: ${POSTGRES_USER}
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRESQL_HOST: db-admin-tenant2
      PGBOUNCER_SET_DATABASE_USER: 'yes'
      PGBOUNCER_SET_DATABASE_PASSWORD: 'yes'
      PGBOUNCER_IGNORE_STARTUP_PARAMETERS: extra_float_digits
    ports:
      - "5402:${PGBOUNCER_LISTEN_PORT:-6432}"
    restart: always
    container_name: ed-fi-pb-admin-tenant2
    depends_on:
      - db-admin-tenant2

  adminapi:
    image: edfialliance/ods-admin-api:${ADMINAPI_TAG}
    profiles: ["default"]
    environment:
      ADMIN_API_VERSION: "${ADMIN_API_VERSION:-2.2.0}"
      ADMIN_WAIT_POSTGRES_HOSTS: 'pb-admin-tenant1 pb-admin-tenant2 '
      POSTGRES_PORT: ${PGBOUNCER_LISTEN_PORT:-6432}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASEENGINE: PostgreSql
      AUTHORITY: ${AUTHORITY}
      ISSUER_URL: ${ISSUER_URL}
      SIGNING_KEY: ${SIGNING_KEY}
      ADMIN_API_VIRTUAL_NAME: ${ADMIN_API_VIRTUAL_NAME:-adminapi}
      AppSettings__DefaultPageSizeOffset: ${PAGING_OFFSET:-0}
      AppSettings__DefaultPageSizeLimit: ${PAGING_LIMIT:-25}
      AppSettings__MultiTenancy: ${MULTITENANCY_ENABLED:-true}
      AppSettings__IgnoresCertificateErrors: ${IGNORES_CERTIFICATE_ERRORS:-true}
      AppSettings__DatabaseEngine: PostgreSQL
      ASPNETCORE_ENVIRONMENT: multitenantdocker
      Authentication__AllowRegistration: 'true'
      SwaggerSettings__EnableSwagger: 'true'
      SwaggerSettings__DefaultTenant: ${SWAGGER_DEFAULT_TENANT:-tenant1}
      ENABLE_ADMIN_CONSOLE: ${ENABLE_ADMIN_CONSOLE:-true}
      USE_SELF_CONTAINED_AUTH: ${USE_SELF_CONTAINED_AUTH:-true}
      OIDC_AUTHORITY: "${OIDC_AUTHORITY:-http://ed-fi-idp-keycloak:8080/realms/edfi-admin-console}"
      OIDC_REQUIRE_METADATA: "${OIDC_REQUIRE_METADATA:-false}"
      OIDC_ENABLE_SERVER_CERTIFICATE: "${OIDC_ENABLE_SERVER_CERTIFICATE:-true}"
      ENABLE_CORS: ${ADMINCONSOLE_ENABLE_CORS:-true}
      AdminConsoleSettings__CorsSettings__AllowedOrigins__0: ${ADMINCONSOLE_ALLOWED_ORIGINS:-http://localhost:8598}
      EDFI_API_DISCOVERY_URL: "${EDFI_API_DISCOVERY_URL:-http://host.docker.internal:8181/api/}"
    volumes:
      - ./edfi/appsettings.dockertemplate.json:/app/appsettings.dockertemplate.json
    entrypoint:
      - /bin/sh
    command:
      - '-c'
      - envsubst < /app/appsettings.dockertemplate.json >
        /app/appsettings.multitenantdocker.json && /app/run.sh
    depends_on:
      - pb-admin-tenant1
      - pb-admin-tenant2
    restart: always
    hostname: ${ADMIN_API_VIRTUAL_NAME:-adminapi}
    container_name: ed-fi-adminapi
    ports:
      - "8282:80"
    healthcheck:
      test: ${ADMIN_API_HEALTHCHECK_TEST}
      start_period: 60s
      retries: 3

volumes:
  vol-db-admin-tenant1:
    driver: local
    name: vol-db-admin-tenant1
  vol-db-admin-tenant2:
    driver: local
    name: vol-db-admin-tenant2
