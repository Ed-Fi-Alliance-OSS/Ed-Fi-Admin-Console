[{"filePath":"C:\\GAP\\ED-FI\\Tickets\\AC-232\\Ed-Fi-Admin-Console\\src\\components\\common\\AdminConsoleTabsMenu.tsx","messages":[{"ruleId":"react/jsx-sort-props","severity":2,"message":"Props should be sorted alphabetically","line":89,"column":11,"nodeType":"JSXIdentifier","messageId":"sortPropsByAlpha","endLine":89,"endColumn":18,"fix":{"range":[2725,2866],"text":"borderRadius=\"1px\"\r\n          h=\"2px\"\r\n          mt=\"5px\"\r\n          display=\"none\" /* Hide the default indicator */\r\n          bg=\"blue.600\""}},{"ruleId":"react/jsx-sort-props","severity":2,"message":"Props should be sorted alphabetically","line":90,"column":11,"nodeType":"JSXIdentifier","messageId":"sortPropsByAlpha","endLine":90,"endColumn":13,"fix":{"range":[2725,2866],"text":"borderRadius=\"1px\"\r\n          h=\"2px\"\r\n          mt=\"5px\"\r\n          display=\"none\" /* Hide the default indicator */\r\n          bg=\"blue.600\""}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"// SPDX-License-Identifier: Apache-2.0\r\n// Licensed to the Ed-Fi Alliance under one or more agreements.\r\n// The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.\r\n// See the LICENSE and NOTICES files in the project root for more information.\r\n\r\nimport {\r\n  Box, Flex, Tabs \r\n} from '@chakra-ui/react'\r\nimport {\r\n  ReactNode, useState, useEffect \r\n} from 'react'\r\n\r\ninterface AdminConsoleTabsMenuProps {\r\n    tabsList: string[]\r\n    children: ReactNode[]\r\n    actionControl?: ReactNode\r\n    initialIndex?: number\r\n    contentMt?: string \r\n    includeWrapper?: boolean\r\n}\r\n\r\nconst AdminConsoleTabsMenu = ({ children, tabsList, initialIndex, contentMt, includeWrapper, actionControl }: AdminConsoleTabsMenuProps) => {\r\n  // Initialize with the tab value at initialIndex or default to first tab\r\n  const [ activeTabIndex, setActiveTabIndex ] = useState<number>(initialIndex ?? 0)\r\n  \r\n  // Update active tab if initialIndex changes\r\n  useEffect(() => {\r\n    if (initialIndex !== undefined) {\r\n      setActiveTabIndex(initialIndex)\r\n    }\r\n  }, [ initialIndex ])\r\n  \r\n  // For Tabs.Root compatibility - use the tab name for values\r\n  const activeTab = tabsList[activeTabIndex]\r\n\r\n  return (\r\n    <Tabs.Root \r\n      defaultValue={tabsList[initialIndex ?? 0]}\r\n      position=\"relative\" \r\n      value={activeTab}\r\n      variant=\"plain\" \r\n      w='full'\r\n      onValueChange={(value) => {\r\n        const newIndex = tabsList.indexOf(value)\r\n\r\n        if (newIndex >= 0) {\r\n          setActiveTabIndex(newIndex)\r\n        }\r\n      }}\r\n    >\r\n      <Flex\r\n        justifyContent='space-between'\r\n        w='full'\r\n      >\r\n        <Flex w='full'>\r\n          <Flex role=\"tablist\">\r\n            {tabsList.map((tab, idx) => (<Flex\r\n              key={tab}\r\n              _notFirst={{ marginLeft: '32px' }}\r\n              aria-selected={idx === activeTabIndex}\r\n              borderBottom={idx === activeTabIndex ? '2px solid' : 'none'}\r\n              borderColor=\"blue.600\"\r\n              color={idx === activeTabIndex ? 'blue.600' : 'inherit'}\r\n              cursor=\"pointer\"\r\n              fontFamily='Poppins'\r\n              fontWeight='bold'\r\n              padding='0'\r\n              paddingBottom='5px'\r\n              position=\"relative\"\r\n              role=\"tab\"\r\n              onClick={(e) => {\r\n                e.preventDefault() // Prevent default navigation\r\n                setActiveTabIndex(idx)\r\n              }}\n            >\r\n              {tab}\r\n            </Flex>\r\n            ))}\r\n          </Flex>\r\n        </Flex>\r\n\r\n        {actionControl}\r\n      </Flex>      {/* Remove or hide the default indicator since we're using direct borders */}\r\n      <Tabs.Indicator>\r\n        <Box \r\n          borderRadius=\"1px\"\r\n          h=\"2px\"\r\n          mt=\"5px\"\r\n          display=\"none\" /* Hide the default indicator */\r\n          bg=\"blue.600\"\r\n        />\r\n      </Tabs.Indicator>\r\n\r\n      {/* Tabs Content */}\r\n      <Flex \r\n        minW=\"100%\"\r\n        mt={contentMt ?? '45px'}\r\n        p='0'\r\n        role=\"tabpanel\"\r\n        w='100%'\r\n      >\r\n        <Box minW=\"100%\" w=\"full\">\r\n          {includeWrapper === false \r\n            ? children[activeTabIndex] \r\n            : <Flex w=\"full\">{children[activeTabIndex]}</Flex>\r\n          }\r\n        </Box>\r\n      </Flex>\r\n    </Tabs.Root>\r\n  )\r\n}\r\n\r\nexport default AdminConsoleTabsMenu","usedDeprecatedRules":[{"ruleId":"quotes","replacedBy":["@stylistic/js/quotes"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin-js","url":"https://eslint.style/packages/js"},"rule":{"name":"quotes","url":"https://eslint.style/rules/js/quotes"}}]}},{"ruleId":"semi","replacedBy":["@stylistic/js/semi"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin-js","url":"https://eslint.style/packages/js"},"rule":{"name":"semi","url":"https://eslint.style/rules/js/semi"}}]}},{"ruleId":"indent","replacedBy":["@stylistic/js/indent"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin-js","url":"https://eslint.style/packages/js"},"rule":{"name":"indent","url":"https://eslint.style/rules/js/indent"}}]}},{"ruleId":"array-bracket-spacing","replacedBy":["@stylistic/js/array-bracket-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin-js","url":"https://eslint.style/packages/js"},"rule":{"name":"array-bracket-spacing","url":"https://eslint.style/rules/js/array-bracket-spacing"}}]}},{"ruleId":"block-spacing","replacedBy":["@stylistic/js/block-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin-js","url":"https://eslint.style/packages/js"},"rule":{"name":"block-spacing","url":"https://eslint.style/rules/js/block-spacing"}}]}},{"ruleId":"space-in-parens","replacedBy":["@stylistic/js/space-in-parens"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin-js","url":"https://eslint.style/packages/js"},"rule":{"name":"space-in-parens","url":"https://eslint.style/rules/js/space-in-parens"}}]}},{"ruleId":"comma-spacing","replacedBy":["@stylistic/js/comma-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin-js","url":"https://eslint.style/packages/js"},"rule":{"name":"comma-spacing","url":"https://eslint.style/rules/js/comma-spacing"}}]}},{"ruleId":"padding-line-between-statements","replacedBy":["@stylistic/js/padding-line-between-statements"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin-js","url":"https://eslint.style/packages/js"},"rule":{"name":"padding-line-between-statements","url":"https://eslint.style/rules/js/padding-line-between-statements"}}]}},{"ruleId":"brace-style","replacedBy":["@stylistic/js/brace-style"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin-js","url":"https://eslint.style/packages/js"},"rule":{"name":"brace-style","url":"https://eslint.style/rules/js/brace-style"}}]}},{"ruleId":"function-paren-newline","replacedBy":["@stylistic/js/function-paren-newline"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin-js","url":"https://eslint.style/packages/js"},"rule":{"name":"function-paren-newline","url":"https://eslint.style/rules/js/function-paren-newline"}}]}},{"ruleId":"array-element-newline","replacedBy":["@stylistic/js/array-element-newline"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin-js","url":"https://eslint.style/packages/js"},"rule":{"name":"array-element-newline","url":"https://eslint.style/rules/js/array-element-newline"}}]}},{"ruleId":"array-bracket-newline","replacedBy":["@stylistic/js/array-bracket-newline"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin-js","url":"https://eslint.style/packages/js"},"rule":{"name":"array-bracket-newline","url":"https://eslint.style/rules/js/array-bracket-newline"}}]}},{"ruleId":"object-property-newline","replacedBy":["@stylistic/js/object-property-newline"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin-js","url":"https://eslint.style/packages/js"},"rule":{"name":"object-property-newline","url":"https://eslint.style/rules/js/object-property-newline"}}]}},{"ruleId":"object-curly-spacing","replacedBy":["@stylistic/js/object-curly-spacing"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin-js","url":"https://eslint.style/packages/js"},"rule":{"name":"object-curly-spacing","url":"https://eslint.style/rules/js/object-curly-spacing"}}]}},{"ruleId":"object-curly-newline","replacedBy":["@stylistic/js/object-curly-newline"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin-js","url":"https://eslint.style/packages/js"},"rule":{"name":"object-curly-newline","url":"https://eslint.style/rules/js/object-curly-newline"}}]}}]}]